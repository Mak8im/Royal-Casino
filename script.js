let currentUser = null;
let balance = 0;
let rouletteCurrentBet = null;
let blackjackGame = null;

// –§—É–Ω–∫—Ü–∏–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
function showRegister() {
    document.querySelector('.auth-form').style.display = 'none';
    document.getElementById('register-form').style.display = 'block';
}

function showLogin() {
    document.querySelector('.auth-form').style.display = 'block';
    document.getElementById('register-form').style.display = 'none';
}

function register() {
    const username = document.getElementById('reg-username').value;
    const password = document.getElementById('reg-password').value;

    if (!username || !password) {
        alert('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!');
        return;
    }

    // –ß—Ç–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const users = readUsers();
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (users.find(u => u.username === username)) {
        alert('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!');
        return;
    }

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    users.push({
        username: username,
        password: password,
        balance: 10000
    });

    writeUsers(users);
    alert('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞! –¢–µ–ø–µ—Ä—å –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É.');
    showLogin();
}

function login() {
    const username = document.getElementById('login-username').value;
    const password = document.getElementById('login-password').value;

    const users = readUsers();
    const user = users.find(u => u.username === username && u.password === password);

    if (user) {
        currentUser = user.username;
        balance = user.balance;
        startSession();
    } else {
        alert('–ù–µ–≤–µ—Ä–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –ø–∞—Ä–æ–ª—å!');
    }
}

function logout() {
    currentUser = null;
    balance = 0;
    document.getElementById('auth-section').style.display = 'block';
    document.getElementById('casino-section').style.display = 'none';
}

function startSession() {
    document.getElementById('auth-section').style.display = 'none';
    document.getElementById('casino-section').style.display = 'block';
    document.getElementById('username-display').textContent = currentUser;
    updateBalance();
}

// –†–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–ª–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
function readUsers() {
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å –±—ã–ª –±—ã AJAX –∑–∞–ø—Ä–æ—Å –∫ —Å–µ—Ä–≤–µ—Ä—É
    // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º localStorage
    const usersData = localStorage.getItem('casinoUsers');
    return usersData ? JSON.parse(usersData) : [];
}

function writeUsers(users) {
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å –±—ã–ª –±—ã AJAX –∑–∞–ø—Ä–æ—Å –∫ —Å–µ—Ä–≤–µ—Ä—É
    localStorage.setItem('casinoUsers', JSON.stringify(users));
}

function updateBalance() {
    document.getElementById('balance').textContent = balance.toLocaleString();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –≤ "–±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"
    const users = readUsers();
    const userIndex = users.findIndex(u => u.username === currentUser);
    if (userIndex !== -1) {
        users[userIndex].balance = balance;
        writeUsers(users);
    }
}

// –ò–≥—Ä—ã
function playSlots() {
    const bet = parseInt(document.getElementById('slot-bet').value);
    const resultElement = document.getElementById('slot-result');

    if (!bet || bet <= 0) {
        resultElement.textContent = '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Ç–∞–≤–∫—É!';
        resultElement.className = 'message lose';
        return;
    }

    if (bet > balance) {
        resultElement.textContent = '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!';
        resultElement.className = 'message lose';
        return;
    }

    // –ê–Ω–∏–º–∞—Ü–∏—è —Å–ª–æ—Ç–æ–≤
    spinSlots();

    setTimeout(() => {
        const symbols = ['üçí', 'üçã', 'üçä', 'üçá', 'üîî', 'üíé'];
        const slot1 = symbols[Math.floor(Math.random() * symbols.length)];
        const slot2 = symbols[Math.floor(Math.random() * symbols.length)];
        const slot3 = symbols[Math.floor(Math.random() * symbols.length)];

        document.getElementById('slot1').textContent = slot1;
        document.getElementById('slot2').textContent = slot2;
        document.getElementById('slot3').textContent = slot3;

        let winAmount = 0;
        let message = '';

        if (slot1 === slot2 && slot2 === slot3) {
            // –î–∂–µ–∫–ø–æ—Ç - —Ç—Ä–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —Å–∏–º–≤–æ–ª–∞
            winAmount = bet * 10;
            message = `–î–ñ–ï–ö–ü–û–¢! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ $${winAmount}!`;
        } else if (slot1 === slot2 || slot2 === slot3 || slot1 === slot3) {
            // –î–≤–∞ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —Å–∏–º–≤–æ–ª–∞
            winAmount = bet * 3;
            message = `–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ $${winAmount}!`;
        } else {
            winAmount = -bet;
            message = '–ü–æ–≤–µ–∑–µ—Ç –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑!';
        }

        balance += winAmount;
        updateBalance();

        resultElement.textContent = message;
        resultElement.className = 'message ' + (winAmount > 0 ? 'win' : 'lose');
    }, 1000);
}

function spinSlots() {
    const symbols = ['üçí', 'üçã', 'üçä', 'üçá', 'üîî', 'üíé'];
    let spins = 0;
    const maxSpins = 10;
    const interval = setInterval(() => {
        document.getElementById('slot1').textContent = symbols[Math.floor(Math.random() * symbols.length)];
        document.getElementById('slot2').textContent = symbols[Math.floor(Math.random() * symbols.length)];
        document.getElementById('slot3').textContent = symbols[Math.floor(Math.random() * symbols.length)];
        spins++;
        if (spins >= maxSpins) {
            clearInterval(interval);
        }
    }, 100);
}

function placeRouletteBet(type) {
    rouletteCurrentBet = type;
    document.querySelectorAll('.roulette-bets button').forEach(btn => btn.style.opacity = '0.5');
    event.target.style.opacity = '1';
}

function spinRoulette() {
    const betAmount = parseInt(document.getElementById('roulette-bet').value);
    const resultElement = document.getElementById('roulette-result');

    if (!rouletteCurrentBet) {
        resultElement.textContent = '–°–¥–µ–ª–∞–π—Ç–µ —Å—Ç–∞–≤–∫—É!';
        resultElement.className = 'message lose';
        return;
    }

    if (!betAmount || betAmount <= 0) {
        resultElement.textContent = '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Ç–∞–≤–∫—É!';
        resultElement.className = 'message lose';
        return;
    }

    if (betAmount > balance) {
        resultElement.textContent = '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!';
        resultElement.className = 'message lose';
        return;
    }

    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ —á–∏—Å–ª–∞ —Ä—É–ª–µ—Ç–∫–∏ (0-36)
    const number = Math.floor(Math.random() * 37);
    const isRed = [1,3,5,7,9,12,14,16,18,19,21,23,25,27,30,32,34,36].includes(number);
    const isBlack = [2,4,6,8,10,11,13,15,17,20,22,24,26,28,29,31,33,35].includes(number);
    const isGreen = number === 0;

    document.getElementById('roulette-number').textContent = number;
    document.getElementById('roulette-number').style.color = isRed ? '#ff4444' : isBlack ? '#000' : '#00aa00';

    let winAmount = 0;
    let message = '';

    if ((rouletteCurrentBet === 'red' && isRed) ||
        (rouletteCurrentBet === 'black' && isBlack) ||
        (rouletteCurrentBet === 'green' && isGreen)) {
        
        const multiplier = rouletteCurrentBet === 'green' ? 14 : 2;
        winAmount = betAmount * multiplier - betAmount;
        message = `–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ $${winAmount + betAmount}!`;
    } else {
        winAmount = -betAmount;
        message = '–°—Ç–∞–≤–∫–∞ –ø—Ä–æ–∏–≥—Ä–∞–Ω–∞!';
    }

    balance += winAmount;
    updateBalance();

    resultElement.textContent = message;
    resultElement.className = 'message ' + (winAmount > 0 ? 'win' : 'lose');
}

// –ë–ª—ç–∫–¥–∂–µ–∫
function startBlackjack() {
    const betAmount = parseInt(document.getElementById('blackjack-bet').value);

    if (!betAmount || betAmount <= 0) {
        showBlackjackResult('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Ç–∞–≤–∫—É!', 'lose');
        return;
    }

    if (betAmount > balance) {
        showBlackjackResult('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!', 'lose');
        return;
    }

    blackjackGame = {
        bet: betAmount,
        playerCards: [],
        dealerCards: [],
        playerScore: 0,
        dealerScore: 0,
        gameOver: false
    };

    // –†–∞–∑–¥–∞—á–∞ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∫–∞—Ä—Ç
    blackjackGame.playerCards = [drawCard(), drawCard()];
    blackjackGame.dealerCards = [drawCard(), drawCard()];

    balance -= betAmount;
    updateBalance();

    updateBlackjackDisplay();
    document.querySelectorAll('#blackjack-controls button')[0].style.display = 'none';
    document.querySelectorAll('#blackjack-controls button')[1].style.display = 'inline-block';
    document.querySelectorAll('#blackjack-controls button')[2].style.display = 'inline-block';
}

function hit() {
    if (!blackjackGame || blackjackGame.gameOver) return;

    blackjackGame.playerCards.push(drawCard());
    updateBlackjackDisplay();

    if (calculateScore(blackjackGame.playerCards) > 21) {
        stand();
    }
}

function stand() {
    if (!blackjackGame || blackjackGame.gameOver) return;

    blackjackGame.gameOver = true;

    // –î–∏–ª–µ—Ä –±–µ—Ä–µ—Ç –∫–∞—Ä—Ç—ã –¥–æ 17
    while (calculateScore(blackjackGame.dealerCards) < 17) {
        blackjackGame.dealerCards.push(drawCard());
    }

    const playerScore = calculateScore(blackjackGame.playerCards);
    const dealerScore = calculateScore(blackjackGame.dealerCards);

    let winAmount = 0;
    let message = '';

    if (playerScore > 21) {
        message = '–ü–µ—Ä–µ–±–æ—Ä! –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏.';
        winAmount = 0;
    } else if (dealerScore > 21) {
        message = '–î–∏–ª–µ—Ä –ø–µ—Ä–µ–±—Ä–∞–ª! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!';
        winAmount = blackjackGame.bet * 2;
    } else if (playerScore > dealerScore) {
        message = '–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!';
        winAmount = blackjackGame.bet * 2;
    } else if (playerScore === dealerScore) {
        message = '–ù–∏—á—å—è! –°—Ç–∞–≤–∫–∞ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∞.';
        winAmount = blackjackGame.bet;
    } else {
        message = '–î–∏–ª–µ—Ä –≤—ã–∏–≥—Ä–∞–ª!';
        winAmount = 0;
    }

    balance += winAmount;
    updateBalance();

    showBlackjackResult(message, winAmount > blackjackGame.bet ? 'win' : 'lose');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –∫–∞—Ä—Ç—ã –¥–∏–ª–µ—Ä–∞
    updateBlackjackDisplay(true);
    
    document.querySelectorAll('#blackjack-controls button')[0].style.display = 'inline-block';
    document.querySelectorAll('#blackjack-controls button')[1].style.display = 'none';
    document.querySelectorAll('#blackjack-controls button')[2].style.display = 'none';
}

function drawCard() {
    const cards = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'];
    return cards[Math.floor(Math.random() * cards.length)];
}

function calculateScore(cards) {
    let score = 0;
    let aces = 0;

    for (let card of cards) {
        if (card === 'A') {
            aces++;
            score += 11;
        } else if (['K', 'Q', 'J'].includes(card)) {
            score += 10;
        } else {
            score += parseInt(card);
        }
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç—É–∑–æ–≤
    while (score > 21 && aces > 0) {
        score -= 10;
        aces--;
    }

    return score;
}

function updateBlackjackDisplay(showDealerCards = false) {
    const cardsElement = document.getElementById('blackjack-cards');
    cardsElement.innerHTML = '';

    // –ö–∞—Ä—Ç—ã –∏–≥—Ä–æ–∫–∞
    cardsElement.innerHTML += '<p>–í–∞—à–∏ –∫–∞—Ä—Ç—ã:</p>';
    blackjackGame.playerCards.forEach(card => {
        cardsElement.innerHTML += `<div class="card">${card}</div>`;
    });
    cardsElement.innerHTML += `<p>–°—á–µ—Ç: ${calculateScore(blackjackGame.playerCards)}</p>`;

    // –ö–∞—Ä—Ç—ã –¥–∏–ª–µ—Ä–∞
    cardsElement.innerHTML += '<p>–ö–∞—Ä—Ç—ã –¥–∏–ª–µ—Ä–∞:</p>';
    blackjackGame.dealerCards.forEach((card, index) => {
        if (showDealerCards || index === 0) {
            cardsElement.innerHTML += `<div class="card">${card}</div>`;
        } else {
            cardsElement.innerHTML += `<div class="card">?</div>`;
        }
    });
    
    if (showDealerCards) {
        cardsElement.innerHTML += `<p>–°—á–µ—Ç –¥–∏–ª–µ—Ä–∞: ${calculateScore(blackjackGame.dealerCards)}</p>`;
    }
}

function showBlackjackResult(message, type) {
    const resultElement = document.getElementById('blackjack-result');
    resultElement.textContent = message;
    resultElement.className = 'message ' + type;
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
document.getElementById('login-password').addEventListener('keypress', function(e) {
    if (e.key === 'Enter') login();
});

document.getElementById('reg-password').addEventListener('keypress', function(e) {
    if (e.key === 'Enter') register();
});
